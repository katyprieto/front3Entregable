{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\ctd digital\\\\front3\\\\entregablekprieto\\\\entregableKPrieto\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Item(props) {\n  _s();\n\n  const [cuenta, setcuenta] = useState(props.stock);\n  let stockActual = \"\";\n  let buttonName = \"Comprar\";\n  let buttonDisable = false;\n\n  if (!cuenta > 0) {\n    stockActual = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: `${\"Agotado\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }, this);\n    buttonName = \"Sin Stock\";\n    buttonDisable = true;\n  } else {\n    stockActual = cuenta.toString();\n  }\n\n  const restar = () => {\n    if (cuenta > 0) {\n      setcuenta(cuenta - 1);\n      props.sumar();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.imagen,\n      alt: props.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"En Stock:\", stock()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restar,\n      children: compra1()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"eckfFdYYeyfuwGmoSu1MFaRawKA=\");\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","Item","props","cuenta","setcuenta","stock","stockActual","buttonName","buttonDisable","toString","restar","sumar","imagen","nombre","descripcion","compra1"],"sources":["C:/Users/Usuario/Desktop/ctd digital/front3/entregablekprieto/entregableKPrieto/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\nimport { useState } from 'react'\r\n\r\nfunction Item(props) {\r\n  const[cuenta,setcuenta]=useState(props.stock);\r\n\r\n\r\n let stockActual =\"\" \r\n let buttonName=\"Comprar\"\r\n let buttonDisable=false\r\n\r\n    if (!cuenta>0){\r\n  stockActual=<span>{`${\"Agotado\"}`}</span>\r\n  buttonName=\"Sin Stock\"\r\n  buttonDisable=true\r\n  }else{\r\n  stockActual=cuenta.toString();\r\n  }\r\n\r\n\r\n\r\n\r\n   \r\n  \r\n\r\n   const restar = () => {\r\n    if (cuenta>0){\r\n    setcuenta(cuenta - 1)\r\n    props.sumar()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='producto'>\r\n      <img src={props.imagen} alt={props.nombre}/>\r\n     <h3>{props.nombre}</h3>\r\n             <p>{props.descripcion}</p>\r\n             <h5>En Stock:{stock()}</h5>\r\n             <button onClick={restar}>{compra1()}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n    \r\n\r\nexport default Item;\r\n\r\n\r\n\r\n   \r\n  "],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EACnB,MAAK,CAACC,MAAD,EAAQC,SAAR,IAAmBJ,QAAQ,CAACE,KAAK,CAACG,KAAP,CAAhC;EAGD,IAAIC,WAAW,GAAE,EAAjB;EACA,IAAIC,UAAU,GAAC,SAAf;EACA,IAAIC,aAAa,GAAC,KAAlB;;EAEG,IAAI,CAACL,MAAD,GAAQ,CAAZ,EAAc;IAChBG,WAAW,gBAAC;MAAA,UAAQ,GAAE,SAAU;IAApB;MAAA;MAAA;MAAA;IAAA,QAAZ;IACAC,UAAU,GAAC,WAAX;IACAC,aAAa,GAAC,IAAd;EACC,CAJC,MAIG;IACLF,WAAW,GAACH,MAAM,CAACM,QAAP,EAAZ;EACC;;EAQA,MAAMC,MAAM,GAAG,MAAM;IACpB,IAAIP,MAAM,GAAC,CAAX,EAAa;MACbC,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;MACAD,KAAK,CAACS,KAAN;IACC;EACF,CALA;;EAOD,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAK,GAAG,EAAET,KAAK,CAACU,MAAhB;MAAwB,GAAG,EAAEV,KAAK,CAACW;IAAnC;MAAA;MAAA;MAAA;IAAA,QADF,eAEC;MAAA,UAAKX,KAAK,CAACW;IAAX;MAAA;MAAA;MAAA;IAAA,QAFD,eAGS;MAAA,UAAIX,KAAK,CAACY;IAAV;MAAA;MAAA;MAAA;IAAA,QAHT,eAIS;MAAA,wBAAcT,KAAK,EAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAJT,eAKS;MAAQ,OAAO,EAAEK,MAAjB;MAAA,UAA0BK,OAAO;IAAjC;MAAA;MAAA;MAAA;IAAA,QALT;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAtCQd,I;;KAAAA,I;AA0CT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}